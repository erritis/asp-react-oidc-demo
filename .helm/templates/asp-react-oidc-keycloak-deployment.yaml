apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.werf.yml -o ./.helm/templates
    kompose.service.expose: keycloak.asp-react-oidc.test
    kompose.service.expose.ingress-class-name: nginx
    kompose.version: 1.27.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: asp-react-oidc-keycloak
  name: asp-react-oidc-keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: asp-react-oidc-keycloak
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.werf.yml -o ./.helm/templates
        kompose.service.expose: keycloak.asp-react-oidc.test
        kompose.service.expose.ingress-class-name: nginx
        kompose.version: 1.27.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/asp-react-oidc-network: "true"
        io.kompose.service: asp-react-oidc-keycloak
    spec:
      containers:
        - args:
            - start
            - --http-port 80
            - --proxy=passthrough
            - --import-realm
          env:
            - name: KC_CACHE_STACK
              value: tcp
            - name: KC_DB
              value: postgres
            - name: KC_DB_PASSWORD
              value: postgres
            - name: KC_DB_URL
              value: jdbc:postgresql://asp-react-oidc-keycloakdb:5432/postgres
            - name: KC_DB_USERNAME
              value: postgres
            - name: KC_FEATURES
              value: token-exchange
            - name: KC_HOSTNAME_STRICT
              value: "false"
            - name: KC_HOSTNAME_STRICT_BACKCHANNEL
              value: "false"
            - name: KC_HOSTNAME_STRICT_HTTPS
              value: "false"
            - name: KC_HTTP_ENABLED
              value: "true"
            - name: KEYCLOAK_ADMIN
              value: admin
            - name: KEYCLOAK_ADMIN_PASSWORD
              value: PdZoV9NpYuq#zdsYXfHo
            - name: PROXY_ADDRESS_FORWARDING
              value: "true"
          image: quay.io/keycloak/keycloak:19.0.3
          name: asp-react-oidc-keycloak
          ports:
            - containerPort: 80
          resources: {}
          volumeMounts:
            - mountPath: /opt/keycloak/data/import/realm-export.json
              name: keycloak-realm
              subPath: realm-export.json
      restartPolicy: Always
      volumes:
        - configMap:
            items:
              - key: realm-export.json
                path: realm-export.json
            name: keycloak-realm
          name: keycloak-realm
status: {}
